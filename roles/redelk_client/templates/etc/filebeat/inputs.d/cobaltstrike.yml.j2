# {{ ansible_managed }}
- type: log
  scan_frequency: 5s
  enabled: true
  fields_under_root: true
  paths:
    - {{ optsec_dir }}/cobaltstrike/logs/*/events.log
  fields:
    infra:
      attack_scenario: {{ attack_scenario }}
      log:
        type: rtops
    c2:
      program: cobaltstrike
      log:
        type: events

- type: log
  scan_frequency: 5s
  enabled: true
  fields_under_root: true
  paths:
    - {{ optsec_dir }}/cobaltstrike/logs/*/weblog.log
  fields:
    infra:
      attack_scenario: {{ attack_scenario }}
      log:
        type: rtops
    c2:
      program: cobaltstrike
      log:
        type: weblog

- type: log
  scan_frequency: 5s
  enabled: true
  fields_under_root: true
  paths:
    - {{ optsec_dir }}/cobaltstrike/logs/*/downloads.log
  fields:
    infra:
      attack_scenario: {{ attack_scenario }}
      log:
        type: rtops
    c2:
      program: cobaltstrike
      log:
        type: downloads

- type: log
  scan_frequency: 5s
  enabled: true
  fields_under_root: true
  paths:
    - {{ optsec_dir }}/cobaltstrike/data/export_credentials.tsv
  fields:
    infra:
      attack_scenario: {{ attack_scenario }}
      log:
        type: rtops
    c2:
      program: cobaltstrike
      log:
        type: credentials

- type: log
  scan_frequency: 5s
  enabled: true
  fields_under_root: true
  paths:
    - {{ optsec_dir }}/cobaltstrike/data/export_listeners.log
  fields:
    infra:
      log:
        type: rtops
    c2:
      program: cobaltstrike
      log:
        type: listeners

- type: log
  scan_frequency: 5s
  enabled: true
  fields_under_root: true
  paths:
    - {{ optsec_dir }}/cobaltstrike/logs/*/*/beacon_*.log
    - {{ optsec_dir }}/cobaltstrike/logs/*/*/ssh_*.log
{% raw %}
  # Since Cobalt Strike version 3.14 the time format in the logs is changed. Here we use regex 'or' function (expr1)|(expr2) to match new or old format
  multiline.pattern: '(^\d\d\/\d\d\s\d\d\:\d\d\:\d\d\sUTC\s\[)|(^\d\d\/\d\d\s\d\d\:\d\d\:\d\d\s\[)' # match "06/19 12:32:56 UTC [" or "06/19 12:32:56 ["
{% endraw %}
  multiline.negate: true
  multiline.match: after
  multiline.max_lines: 100000
  fields:
    infra:
      attack_scenario: {{ attack_scenario }}
      log:
        type: rtops
    c2:
      program: cobaltstrike
      log:
        type: beacon

- type: log
  scan_frequency: 5s
  enabled: true
  fields_under_root: true
  paths:
    - {{ optsec_dir }}/cobaltstrike/logs/*/*/keystrokes/keystrokes_*.txt
{% raw %}
  # Since Cobalt Strike version 3.14 the time format in the logs is changed. Here we use regex 'or' function (expr1)|(expr2) to match new or old format
  multiline.pattern: '(^\d\d\/\d\d\s\d\d\:\d\d\:\d\d\sUTC\s\[)|(^\d\d\/\d\d\s\d\d\:\d\d\:\d\d\s\[)' # match "06/19 12:32:56 UTC [" or "06/19 12:32:56 ["
{% endraw %}
  multiline.negate: true
  multiline.match: after
  multiline.max_lines: 100000
  fields:
    infra:
      attack_scenario: {{ attack_scenario }}
      log:
        type: rtops
    c2:
      program: cobaltstrike
      log:
        type: keystrokes

- type: log
  scan_frequency: 5s
  enabled: true
  fields_under_root: true
  paths:
    - {{ optsec_dir }}/cobaltstrike/logs/*/*/screenshots.log
{% raw %}
  # Since Cobalt Strike version 3.14 the time format in the logs is changed. Here we use regex 'or' function (expr1)|(expr2) to match new or old format
  multiline.pattern: '(^\d\d\/\d\d\s\d\d\:\d\d\:\d\d\sUTC\s\[)|(^\d\d\/\d\d\s\d\d\:\d\d\:\d\d\s\[)' # match "06/19 12:32:56 UTC [" or "06/19 12:32:56 ["
{% endraw %}
  multiline.negate: true
  multiline.match: after
  multiline.max_lines: 100000
  fields:
    infra:
      attack_scenario: {{ attack_scenario }}
      log:
        type: rtops
    c2:
      program: cobaltstrike
      log:
        type: screenshots
